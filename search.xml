<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[一组海报练习(二)]]></title>
      <url>http://jim4ever.com/2016/11/22/poster_pomo2/</url>
      <content type="html"><![CDATA[<blockquote>
<p>从网上找到的几种海报风格的练习和临摹，比较简单，但很好看。</p>
</blockquote>
<h4 id="平面几何图形透视风格"><a href="#平面几何图形透视风格" class="headerlink" title="平面几何图形透视风格"></a>平面几何图形透视风格</h4><p>很简单，需要整个图片有一个主题图形，然后使得几何线框可以穿插其中，制造出空间交错的感觉。通过几何线框，也能够突出强调主标题。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/3075665-f9e0c23872ee1ecf.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="book_poster copy"><br><a id="more"></a><br><img src="http://upload-images.jianshu.io/upload_images/3075665-e919ca1cda38d369.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Chrysanthemum"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/3075665-d7ef19b0b361280e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="poster_view"></p>
<h4 id="渐变风格"><a href="#渐变风格" class="headerlink" title="渐变风格"></a>渐变风格</h4><p>第一幅图，其实原图是OPPO的海报，背景是一片海，我把它改为了另一个品牌的海报，其中整图添加了渐变，唯一使用了一点比较高深的技巧，就是图层蒙版，把背景的大海弱化，使主体人物突出。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/3075665-86a08611526d0e05.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="esplit_poster2"></p>
<p>这一幅同样，只不过背景更加简单，不用处理。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/3075665-1f2351475847a36b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="esplit_poster"></p>
<h4 id="迷彩风格"><a href="#迷彩风格" class="headerlink" title="迷彩风格"></a>迷彩风格</h4><p>这是根据站酷上又一个教程制作的，模仿欢乐颂海报的风格，把人物抠出后去色，选择合适的水彩背景，使用图层蒙版和图层混合样式叠加而成。<a href="http://www.zcool.com.cn/article/ZNDMzMTE2.html" target="_blank" rel="external">教程</a>点这里。当然，每个人选择的素材不同，做出的海报风格差异也很大。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/3075665-501995f22d997693.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="poster"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一组海报练习(一)]]></title>
      <url>http://jim4ever.com/2016/11/21/poster_pomo1/</url>
      <content type="html"><![CDATA[<blockquote>
<p>疯狂的迷上了设计的后果，就是疯狂的尝试各种各样的设计门类及风格，看到吸引的东西就忍不住的想尝试临摹学习把它变成自己的，虽然不是科班出身，虽然没有系统的理论做支撑，虽然工作经验为零，但设计在于不断的积累，在于长久的坚持，在于心中有一种信念。</p>
</blockquote>
<h4 id="泼墨风格海报"><a href="#泼墨风格海报" class="headerlink" title="泼墨风格海报"></a>泼墨风格海报</h4><p>这一组是根据BigD的教程临摹而来的，纯属练习技法。<br>亮点一为笔刷，类似于泼墨喷溅的风格，给人自由、恣意创作的快感；<br>亮点二为标题采用半隐藏在主题图案后面的方式，突出层次感和灵动感。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/3075665-94e3a7c3573f5c73.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="泼墨"></p>
<a id="more"></a>
<p>下面这一幅，主要是字体的搭配，如何与电影的内容及海报的形式匹配，并且相得益彰。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/3075665-1e46eb0609854818.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="泼墨2"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[旅行类手机APP设计（二）]]></title>
      <url>http://jim4ever.com/2016/10/26/tra_App2/</url>
      <content type="html"><![CDATA[<blockquote>
<p>APP产品设计流程遵循这样几个步骤：</p>
<ol>
<li>需求分析</li>
<li>原型设计</li>
<li>交互Demo</li>
<li>用户测试</li>
<li>视觉界面</li>
<li>切割编码</li>
<li>发布跟踪<br>上一篇完成了交互设计，这一篇开始针对后续步骤继续进行制作。</li>
</ol>
</blockquote>
<h4 id="风格-amp-色彩"><a href="#风格-amp-色彩" class="headerlink" title="风格&amp;色彩"></a>风格&amp;色彩</h4><p>根据内容确定风格，内容是全家旅行，所以风格确定为欢乐、健康、活泼，主色调采用向日葵黄。<br>还要选取几种辅色，主要用于背景、文字、提示信息。</p>
<a id="more"></a>
<p><img src="http://upload-images.jianshu.io/upload_images/3075665-a2fbc46b870e77fd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="风格&amp;色彩"></p>
<h4 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h4><p>中文字体则选择方正兰亭黑这种适合界面呈现、易于读取的字体，样式平滑；<br>英文字体选择苹果电脑的默认字体Helvetica Neue，样式平滑；</p>
<h4 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h4><p>图标力求简洁、优雅、圆润。</p>
<blockquote>
<p>以下所有图片均从百度下载，只限个人练习使用，如涉及版权问题可立即删除。</p>
</blockquote>
<h4 id="图片选择"><a href="#图片选择" class="headerlink" title="图片选择"></a>图片选择</h4><p>虽然仅为展示用，但是图片的选择上还是会有很多讲究。比如所有图片整体的色彩，我选择大背景为天空蓝。当然所有的图片均经过调色，去除偏红或偏绿的色调，整体向偏亮、偏蓝色方向调，使画面给人感觉干净而且明亮。</p>
<h4 id="配色"><a href="#配色" class="headerlink" title="配色"></a>配色</h4><p>配色方面，力求每个画面都含有主色调向日葵黄，但又不会占据太大的空间，避免产生像阿里飞猪那样的促销页面的感受，使界面色泽通透不失主旋律。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/3075665-f2092b52b69173d0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="配色"></p>
<h4 id="界面分析"><a href="#界面分析" class="headerlink" title="界面分析"></a>界面分析</h4><p><strong>1. 主页</strong></p>
<p>主页要展示最核心内容：旅行游记。每篇游记除了显示封面图片，还会显示标题、旅行时间、地点、成员。<br>首页左上角显示主题LOGO。</p>
<p><strong>2. 游记详情页</strong></p>
<p>显示：</p>
<ol>
<li>游记题目；</li>
<li>作者头像及名称，可关注；</li>
<li>时间、地点、团队成员；</li>
<li>游记详细内容，每张图片可点赞、可评论，这一点借鉴面包旅行；</li>
</ol>
<p><strong>3. 朋友圈</strong></p>
<p>显示：</p>
<ol>
<li>朋友头像、名称；</li>
<li>内容、发布时间；</li>
<li>可点赞、可评论；</li>
<li>朋友圈内容包括四方面：游记、全家福、旅行贴士、旅行计划；</li>
</ol>
<p><strong>4. 旅行贴士</strong></p>
<p>显示的是我关注的、最热门的旅行贴士；<br>可点赞，可评论；</p>
<p><strong>5. 我的主页</strong></p>
<p>显示：</p>
<ol>
<li>我的名称、头像等个人信息；</li>
<li>我的关注和我的粉丝；</li>
<li>我的点赞和评论；</li>
<li>我的私信；</li>
<li>我发布的四类内容，以Tab页的形式呈现：游记、全家福、旅行贴士、旅行计划；</li>
</ol>
<p><strong>6. 我的游记详情页</strong></p>
<p>显示游记的详细内容、点赞和评论；</p>
<p><strong>7. 登录页</strong></p>
<p>可通过手机号、密码登录；<br>也可使用第三方账户登录；</p>
<p><strong>8. 旅行贴士查找页</strong></p>
<p>显示最近热门的旅行贴士类别，更方便用户一键定位；</p>
<p><strong>9. 我喜欢的</strong></p>
<p>显示我收藏的和喜欢的内容。</p>
<p><strong>10. 我的设置</strong></p>
<p>可修改头像、密码等等，包含常用到的设置；</p>
<p><strong>11. 创建旅行游记</strong></p>
<p>填写游记名称、上传照片，等等。</p>
<h4 id="未完待续，请广泛提出意见和建议。"><a href="#未完待续，请广泛提出意见和建议。" class="headerlink" title="未完待续，请广泛提出意见和建议。"></a>未完待续，请广泛提出意见和建议。</h4>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[旅行类手机APP设计（一）]]></title>
      <url>http://jim4ever.com/2016/10/25/tra_App/</url>
      <content type="html"><![CDATA[<blockquote>
<p>这个题目好像有点大，对于我来说，也是一个挑战，我想这也是每一个想从设计爱好者转变为设计从业者，所必须要尝试和经历的事情。量变引起质变，我从来不觉得什么事情投机取巧就能完成的很好。笨鸟，说的就是我😄</p>
</blockquote>
<h3 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h3><p>一是为了找工作多一份作品，二是为了锻炼一下自己把控定位产品的能力，所以需要自己给自己设定一个题目，这个题目本身也要有要求。</p>
<ol>
<li>题目本身不能过大</li>
<li>要有一定的商业定位</li>
<li>是发自内心想做的东西</li>
</ol>
<p>最终选择旅行类APP，自从自己工作以来，只要有闲暇的时间，总会马不停蹄的往外跑，想看看外面的山山水水，也想看看外面人们的风土民俗和生活方式。有时候和同学朋友同行，有时候一个人背起背包，就出发了。<br>其实最想的还是能带着年迈的父母，在他们身体还健硕的时候，能和他们一起出去走走，带他们看看我们觉得精彩的世界，路上说说心里话，开心畅快的做一次全家出动的旅行，最好是三代同堂的旅行。</p>
<p>所以这个题目选择起来，难度并不是很大。<br>此APP主要面向的人群应当是中青年有一定收入基础的人群，他们在朝九晚五的工作完成之后，也同样想能有时间能陪伴自己的家人，放松身心，所以短途出行是一种不错的选择。</p>
<a id="more"></a>
<h4 id="细化"><a href="#细化" class="headerlink" title="细化"></a>细化</h4><p>定位完成之后，就是要在内容的选择上下一番功夫。</p>
<p>一般APP的Tab页会有四到五栏，每一栏都会有针对和侧重的内容，每一栏该如何设计，内容的安排与衔接，这是很考验逻辑思维的地方。由于时间比较久远，一些具体思考的细节有遗失，但我尽全力梳理出来。</p>
<p><strong>1. 首页</strong></p>
<p>首页的话一定是展示整个APP最精彩和最核心的内容，当然我们的APP最核心的内容就是旅行的过程，也就是旅友们认真上传的游记。这里会选择最热门最精彩的，呈现在首页。</p>
<p>首页支持显示每一篇游记的名称，旅游地点、时间，还有同行的人员，比如说父母或者姐妹，是为了方便同样想带这些亲人组团的同学有一个针对性的参考。</p>
<p><strong>2. 朋友圈</strong></p>
<p>朋友圈的展示内容暂时设定为四种，也是围绕着全家出行的这个核心：</p>
<p>游记：旅行过程，以及过程中好玩的风景和事件的分享；<br>全家福：全家合照的分享，可以只分享照片；<br>旅行小贴示：旅行中的经验和友情提示；<br>旅行计划：何时何地想带谁一起旅行，目的是方便亲人和朋友之间组团出行；</p>
<blockquote>
<p>凡是加为好友的朋友分享的上述四类内容，都可以点赞、评论和分享。</p>
</blockquote>
<p><strong>3. 贴示</strong></p>
<p>这里展示的是一些自己关注的和热门的旅行贴士，例如：防晒、婴儿、登山等需要注意的事项，都是其他同学的宝贵经验，非常值得借鉴。</p>
<blockquote>
<p>可点赞、评论、分享。</p>
</blockquote>
<p><strong>4. 我的主页</strong></p>
<p>将显示我的个人信息，用于个人内容管理：</p>
<ol>
<li>我的名字、头像；</li>
<li>粉丝和我关注的人；</li>
<li>收到的赞和评论；</li>
<li>收到的私信；</li>
<li>我分享的内容展示：游记、全家福、旅行贴士、旅行计划；</li>
</ol>
<p><strong>5. 分享</strong></p>
<p>首页Tab页最中间最明显的Icon，就是分享按钮。可以分享四种内容，分别是游记、全家福、旅行贴士、旅行计划。</p>
<blockquote>
<p>下面是第一版的交互设计稿，看起来很ugly，不过确实也是费了一番功夫的。最难最核心的就是业务逻辑的梳理，只要梳理清楚，交互流程很快就能画的出来。至于交互流程如何画的清晰，如何能让UI设计师和程序员一目了然看的清楚直白，这是交互设计师的修炼，需要不断完善技能。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/3075665-d779026aaa5ab3b7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="travell_app_prototype-Recovered.jpg"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[HTML5基础介绍]]></title>
      <url>http://jim4ever.com/2016/09/22/HTML5base/</url>
      <content type="html"><![CDATA[<p><img src="http://7xpbws.com1.z0.glb.clouddn.com/html5logo.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt=""></p>
<blockquote>
<p>HTML5 肯定不是多了一些标签就完事了<br>HTML5 根酷炫没什么关系，更多的职责是功能，而不是外观</p>
</blockquote>
<hr>
<h3 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h3><h4 id="WEB技术阶段"><a href="#WEB技术阶段" class="headerlink" title="WEB技术阶段"></a>WEB技术阶段</h4><ol>
<li>Web 1.0 内容为主，主要流行HTML和CSS</li>
<li>Web 2.0 动态网页，流行AJAX/JavaScript/DOM</li>
<li>HTML5 时代，WEB开发回归富客户端</li>
</ol>
<h4 id="什么是HTML5"><a href="#什么是HTML5" class="headerlink" title="什么是HTML5"></a>什么是HTML5</h4><ul>
<li>是HTML的超集，不仅仅是HTML，更多的是JavaScript API和CSS的提升，</li>
<li>构建 Web 应用程序整体解决方案</li>
</ul>
<blockquote>
<p>API的概念就是我们编程时所依赖的东西的总称</p>
</blockquote>
<a id="more"></a>
<h4 id="什么是Web-Application"><a href="#什么是Web-Application" class="headerlink" title="什么是Web Application"></a>什么是Web Application</h4><ul>
<li>HTML5 前身，由WHATWG组织提出</li>
<li>推出的目的主要是提高Web应用程序的功能</li>
<li>2007年提交到W3C组织，成了现在我们看到的HTML5</li>
</ul>
<h4 id="HTML5应用场景"><a href="#HTML5应用场景" class="headerlink" title="HTML5应用场景"></a>HTML5应用场景</h4><ul>
<li>极具表现力的网页<ul>
<li>案例非常多</li>
</ul>
</li>
<li>网页应用程序<ul>
<li>PC端：iCloud、百度脑图、Office 365···</li>
<li>APP端：淘宝、京东、美团···</li>
<li>WeChat端：淘宝、京东、美团···</li>
</ul>
</li>
<li>混合式本地应用<ul>
<li>PC端：网易云音乐、有道词典···</li>
<li>APP端：淘宝、京东、美团···</li>
</ul>
</li>
<li>简单的游戏</li>
</ul>
<h4 id="H5新特性概要"><a href="#H5新特性概要" class="headerlink" title="H5新特性概要"></a>H5新特性概要</h4><h5 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h5><ul>
<li>标签<ul>
<li>更语义化标签</li>
</ul>
</li>
<li>智能表单<ul>
<li>新的表单类型，如：email,url,number</li>
<li>新增表单功能属性，如：autocomplete，autofocus</li>
<li>虚拟键盘适配，通过表单的类型决定移动端弹出的键盘类型</li>
</ul>
</li>
<li>网页多媒体，我们可以在网页中直接通过原生方式播放视频音频<ul>
<li>音频</li>
<li>视频</li>
<li>字幕</li>
</ul>
</li>
<li>属性，语义化属性<ul>
<li>链接关系描述</li>
<li>结构数据标记</li>
<li>ARIA</li>
<li>自定义属性</li>
</ul>
</li>
<li>Canvas，提供网页绘图的可能，后面在Canvas课程会专门去学习<ul>
<li>2D 绘图</li>
<li>3D (WebGL)</li>
</ul>
</li>
<li>SVG</li>
</ul>
<h5 id="JavaScript-API"><a href="#JavaScript-API" class="headerlink" title="JavaScript API"></a>JavaScript API</h5><ul>
<li>核心平台提升，JS在DOM和BOM两个方向上都新增了很多api，便于开发应用程序<ul>
<li>新的选择器</li>
<li>Element.classList</li>
<li>访问历史API</li>
<li>全屏API</li>
</ul>
</li>
<li>网页存储，提供网页中操作客户端本地存储的API<ul>
<li>Application Cache</li>
<li>localStorage</li>
<li>sessionStorage</li>
<li>WebSQL</li>
<li>IndexedDB</li>
</ul>
</li>
<li>设备信息访问，JS可以访问硬件的一些信息，我们在移动手机APP的课程中再看<ul>
<li>网络状态</li>
<li>硬件访问</li>
<li>设备方向</li>
<li>地理围栏</li>
</ul>
</li>
<li>拖放操作<ul>
<li>网页内拖放</li>
<li>桌面拖入</li>
</ul>
</li>
<li>文件<ul>
<li>文件系统API</li>
<li>FileReader</li>
</ul>
</li>
<li>网络访问<ul>
<li>XMLHttpRequest</li>
<li>fetch</li>
<li>WebSocket</li>
</ul>
</li>
<li>多线程</li>
<li>桌面通知，</li>
</ul>
<h5 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h5><ul>
<li>后面详细讨论</li>
</ul>
<hr>
<h3 id="HTML5-骨架"><a href="#HTML5-骨架" class="headerlink" title="HTML5 骨架"></a>HTML5 骨架</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- HTML5的DOCTYPE声明做了最大简化 --&gt;</span></div><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 在标准的HTML5骨架中charset是直接在meta中设置charset --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 字符编码的设置一定是在head中的第一行 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    </div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>HTML5的DOCTYPE声明做了最大简化</li>
<li>在标准的HTML5骨架中charset是直接在meta中设置charset</li>
<li>字符编码的设置一定是在head中的第一行，再晚就来不及了</li>
</ul>
<h3 id="语义化标签"><a href="#语义化标签" class="headerlink" title="语义化标签"></a>语义化标签</h3><h4 id="什么是语义化标签"><a href="#什么是语义化标签" class="headerlink" title="什么是语义化标签"></a>什么是语义化标签</h4><ul>
<li>HTML5中制定了一系列语义化标签：<ul>
<li>section：独立的内容节块，一般包含标题和内容</li>
<li>article：一种特殊的section，定义文档中的具体的文章内容</li>
<li>nav：页面导航的链接组</li>
<li>aside：标签用来装载非正文的内容，此标签中的文字权重低</li>
<li>header：定义文档的页眉，不仅仅是文档的页头可以使用header，一个独立块的头部也应该使用header</li>
<li>footer：定义section或document的页脚</li>
</ul>
</li>
<li>我们应该根据内容的性质决定使用特定的标签</li>
<li><p>h1一定只能出现一个，不是HTML的约定，页面中最重要的内容</p>
</li>
<li><p>time标签专门用于时间，</p>
<ul>
<li>datetime应该是一个标准时间格式，</li>
<li>pubdate指的是当前时间为article的发布时间 </li>
</ul>
</li>
<li><p>在H5中，主体结构标签默认和DIV都是相同的块级效果，</p>
</li>
<li>但是DIV没有语义，而以上标签有特定语义</li>
</ul>
<h4 id="为什么要有语义化标签"><a href="#为什么要有语义化标签" class="headerlink" title="为什么要有语义化标签"></a>为什么要有语义化标签</h4><ul>
<li>能够便于开发者阅读和写出更优雅的代码，代码如诗</li>
<li>同时让浏览器或是网络爬虫可以很好地解析，从而更好分析其中的内容</li>
<li>使用语义化标签会具有更好地搜索引擎优化</li>
</ul>
<h5 id="切记"><a href="#切记" class="headerlink" title="切记"></a>切记</h5><ul>
<li>HTML的职责是描述一块内容是什么（或其意义）</li>
<li>而不是它长的什么样子，它的外观应该由CSS来决定。</li>
</ul>
<hr>
<h3 id="智能表单"><a href="#智能表单" class="headerlink" title="智能表单"></a>智能表单</h3><h4 id="新的表单类型"><a href="#新的表单类型" class="headerlink" title="新的表单类型"></a>新的表单类型</h4><ul>
<li>email - 限定输入内容为邮箱地址，表单提交时会校验格式</li>
<li>url - 限定输入内容为URL，表单提交时会校验格式</li>
<li>number - 限定输入内容为数字，表单提交时会校验格式</li>
<li>range - 数值范围选择器</li>
<li>Date Pickers - 日期时间选择器<ul>
<li>样式不能修改，移动端用的比较多，因为移动端显示的是系统的时间或日期选择器</li>
<li>date - 选取日、月、年</li>
<li>month - 选取月、年</li>
<li>week - 选取周和年</li>
<li>time - 选取时间（小时和分钟）</li>
<li>datetime - 选取时间、日、月、年，浏览器兼容性不好，效果等同于datetime-local</li>
<li>datetime-local - 选取本地时间、日、月、年</li>
</ul>
</li>
<li>search - 搜索域，语义化，表示定义搜索框</li>
</ul>
<h4 id="新的表单属性"><a href="#新的表单属性" class="headerlink" title="新的表单属性"></a>新的表单属性</h4><ul>
<li><p>form</p>
<ul>
<li>autocomplete 设置整个表单是否开启自动完成 on|off</li>
<li>novalidate 设置H5的表单校验是否工作 true 不工作  不加该属性代表校验</li>
</ul>
</li>
<li><p>input:</p>
<ul>
<li>autocomplete 单独设置每个文本框的自动完成</li>
<li>autofocus 设置当前文本域页面加载完了过后自动得到焦点</li>
<li>form 属性是让表单外的表单元素也可以跟随表单一起提交</li>
<li>form overrides<ul>
<li>formaction 在submit上重写表单的特定属性，当点击当前submit时会以当前值使用</li>
<li>formenctype,</li>
<li>formmethod,</li>
<li>formnovalidate,</li>
<li>formtarget</li>
</ul>
</li>
<li>list 作用就是指定当前文本框的自动完成列表的数据 datalist 在界面上是看不见的，只是用于定义数据列表的</li>
<li>min / max / step<ul>
<li>min max 限制值的范围，但是不会再输入时限制，提交时校验，</li>
<li>step设置的是每次加减的增量</li>
<li>主要使用在number range datepicker上</li>
</ul>
</li>
<li>multiple<ul>
<li>文本域的多选</li>
</ul>
</li>
<li>pattern<ul>
<li>设置文本框的匹配格式（正则）</li>
</ul>
</li>
<li>placeholder<ul>
<li>文本框占位符</li>
</ul>
</li>
<li>required<ul>
<li>限制当前input为必须的</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="虚拟键盘适配"><a href="#虚拟键盘适配" class="headerlink" title="虚拟键盘适配"></a>虚拟键盘适配</h4><ul>
<li>在移动端中，我们可以通过不同的表单类型控制弹出的键盘类型</li>
</ul>
<h4 id="关于什么时候使用H5的新特性，能不能使用新特性的问题"><a href="#关于什么时候使用H5的新特性，能不能使用新特性的问题" class="headerlink" title="关于什么时候使用H5的新特性，能不能使用新特性的问题"></a>关于什么时候使用H5的新特性，能不能使用新特性的问题</h4><ul>
<li>无伤大雅的地方直接用<ul>
<li>比如一个文本框，加上placeholder就具备占位文本提示功能，浏览器不支持也不会报错，那就可以直接使用</li>
<li>再比如<code>&lt;input type=&quot;email&quot;&gt;</code>，如果浏览器不支持，默认会显示文本框，那也可以直接用。</li>
</ul>
</li>
</ul>
<hr>
<h3 id="网页多媒体"><a href="#网页多媒体" class="headerlink" title="网页多媒体"></a>网页多媒体</h3><h4 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h4><h4 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h4><h4 id="多媒体标签属性"><a href="#多媒体标签属性" class="headerlink" title="多媒体标签属性"></a>多媒体标签属性</h4><h4 id="自定义播放器外观"><a href="#自定义播放器外观" class="headerlink" title="自定义播放器外观"></a>自定义播放器外观</h4><h4 id="全屏-API"><a href="#全屏-API" class="headerlink" title="全屏 API"></a>全屏 API</h4><h4 id="SVG"><a href="#SVG" class="headerlink" title="SVG *"></a>SVG *</h4><hr>
<h2 id="JS-基础-API"><a href="#JS-基础-API" class="headerlink" title="JS 基础 API"></a>JS 基础 API</h2><h3 id="新选择器"><a href="#新选择器" class="headerlink" title="新选择器"></a>新选择器</h3><h3 id="Element-classList"><a href="#Element-classList" class="headerlink" title="Element.classList"></a>Element.classList</h3><h3 id="自定义属性-DATA"><a href="#自定义属性-DATA" class="headerlink" title="自定义属性 DATA-* !"></a>自定义属性 DATA-* !</h3><h3 id="访问历史API"><a href="#访问历史API" class="headerlink" title="访问历史API *"></a>访问历史API *</h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[2015下半年的图标练习]]></title>
      <url>http://jim4ever.com/2015/12/29/icon2015/</url>
      <content type="html"><![CDATA[<p>大约从八月份开始，我进行了一些专门针对性的图标练习，汇总一下，也算是2015给自己的一部分努力做个总结：</p>
<p><strong>1. 第一次系列图标的练习</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/3075665-b55fcecdac092ca9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>当时还是很有成就感的，大概八月份时候绘制，现在看一看确实能发现不少问题：</p>
<a id="more"></a>
<ol>
<li><p>总体风格简约线性图标，但是大小上没有统一的规范，使人视觉观感大小不一，参差不齐；</p>
</li>
<li><p>没有用网格系统；</p>
</li>
<li><p>有些图形处理欠妥：Position图标下面的弧度有点怪，Help图标“？”字体的选用欠妥（粗细）、所有图标必须保证矢量；</p>
</li>
<li><p>背景毛玻璃效果做的不是很明显；</p>
</li>
</ol>
<p>总体来说，第一次绘制，能完全临摹下来，也收获了不少。</p>
<p><strong>2. 第二次系列图标练习</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/3075665-ea71bd3e07da0672.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>紧随其后又练习了这样一组相对复杂，带有图层样式的图标，问题：</p>
<ol>
<li><p>绘制时依旧没有使用网格系统，作图前没有制定规范和标准；</p>
</li>
<li><p>整体风格有尖角，亦有圆角，风格不统一；</p>
</li>
<li><p>图标内的描边与留白有粗有细，标准不统一；</p>
</li>
</ol>
<p>这次的针对性练习：布尔运算</p>
<p><strong>3. 第三次系列图标练习</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/3075665-fde8f43a61c4cf40.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>这一次加上了色彩的运用，最明显的问题是字体略显稚拙。</p>
<p>针对性练习：仍旧是布尔运算</p>
<p><strong>4. 第四次系列图标练习</strong></p>
<p>经历一系列临摹练习之后，决定做一次自己的尝试，选择圆角略带膨胀的矩形，色彩选择中性和低饱和度，给人一种干净、圆润、舒适的感觉。</p>
<p><img src="http://7xpbws.com1.z0.glb.clouddn.com/3127E5279B9EB36D0485984272E9E392.jpg" alt=""></p>
<p>我想说的是，在UI初学阶段，创作时需要搜集大量的素材来指导自己的创作。因为初学者在创作之初虽然会梳理一整套创作思路，但毕竟限于经验所缺，脑海中所想不一定就能够100%用笔或工具表达出来。另外对于基础知识的缺失（色彩搭配、整体风格、形状组合、用户习惯、规范标准），也会导致整体创作的效果不高。所以我主要想表达的意思是，初学者还是需要收集大量优质的素材来指导自己的创作。</p>
<p><strong>不足之处</strong>：由于时间和精力的关系，只做了一部分，未完待续。。。</p>
]]></content>
    </entry>
    
  
  
</search>
